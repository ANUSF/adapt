- title "Study Summary"

- if @study.is_submitted
  %p
    %em
      Please be aware that the study details shown below refer to the
      study as it was first submitted and may not reflect all changes
      made on file at later stages.

- if @study.status == "submitted" and @study.can_be_approved_by current_user
  .box
    = formular_for @study, :url => approve_study_path(@study), |
                           :html => { :method => :post } do |f| |
      Archivist:
      = f.select :archivist, :label => ''
      %hr
      %p
        Approve and assign to the selected archivist
        &nbsp;
        = f.result_buttons %w{Approve}
      %p
        or reopen for depositor to add further information
        &nbsp;
        = f.result_buttons %w{Reopen}
  .clear
  %hr
- elsif @study.can_be_stored_by current_user
  .box
    = formular_for @study, :url => store_study_path(@study), |
                           :html => { :method => :post } do |f| |
      Number range for ID:
      = f.select :id_range, :label => ''
      %hr
      %p
        Generate a study id and create files for processing
        &nbsp;
        = f.result_buttons %w{Store}
      %p
        - if @study.owner == current_user
          or reopen for further editing within ADAPT
        - else
          or reopen for depositor to add further information
        &nbsp;
        = f.result_buttons %w{Reopen}
  .clear
  %hr

.properties
  %ul
    %li
      %dfn Title:
      %em=h @study.title
    %li
      %dfn Abstract:
      =format_text @study.abstract
  %hr
  %ul
    %li
      %dfn Attachments:
      - if @study.attachments.empty?
        &mdash;
      - else
        %ul= render @study.attachments
  %hr
  %ul
    %li
      %dfn Created by:
      =h @study.owner.name
    %li
      %dfn Access Mode:
      = cleanup access_text(@study)
    %li
      %dfn Status:
      =h @study.status
    %li
      %dfn ASSDA ID:
      = cleanup @study.identifier
    %li
      %dfn Archivist:
      = cleanup(@study.archivist && @study.archivist.name)

  %hr
  %ul
    %li
      %dfn Kind of data:
      - tmp = []
      - tmp << "qualitative" if @study.data_is_qualitative == '1'
      - tmp << "quantitative" if @study.data_is_quantitative == '1'
      - tmp = tmp.empty? ? [] : [tmp.join(" and ")]
      = cleanup((tmp + (@study.data_kind || [])).join(", ").humanize)
    %li
      %dfn Related data:
      = cleanup @study.data_relation
    %li
      %dfn Sample population:
      = cleanup @study.sample_population
    %li
      %dfn Time period:
      - range = [h(@study.period_start), h(@study.period_end)]
      = range.join(" &mdash; ").html_safe
    %li
      %dfn Response rate:
      = cleanup @study.response_rate
    %li
      %dfn Sampling procedure:
      = cleanup((@study.sampling_procedure || []).join(", ").humanize)
    %li
      %dfn Collection method:
      = cleanup((@study.collection_method || []).join(", ").humanize)
    %li
      %dfn Collection period:
      - range = [h(@study.collection_start), h(@study.collection_end)]
      = range.join(" &mdash; ").html_safe

  %hr
  %ul
    %li
      %dfn Depositor:
      - if @study.depositor_name.blank? and |
          @study.depositor_affiliation.blank? |
        &mdash;
      - else
        = "#{cleanup @study.depositor_name},"
        = cleanup @study.depositor_affiliation
    %li
      %dfn Principal Investigators:
      - if @study.principal_investigators.blank?
        &mdash;
      - else
        %ul
          - for item in @study.principal_investigators
            %li
              = "#{cleanup item["name"]},"
              = cleanup item["affiliation"]
    %li
      %dfn Data Producers:
      - if @study.data_producers.blank?
        &mdash;
      - else
        %ul
          - for item in @study.data_producers
            %li
              = "#{cleanup item["name"], "n.a."},"
              = cleanup item["affiliation"], "n.a."
    %li
      %dfn Funding:
      - if @study.funding_agency.blank?
        &mdash;
      - else
        %ul
          - for item in @study.funding_agency
            %li
              - data = []
              - data << item["agency"] unless item["agency"].blank?
              - unless item["grant_number"].blank?
                - data << "grant no. #{item["grant_number"]}"
              = cleanup data.join(", ")
    %li
      %dfn Acknowledgements:
      - if @study.other_acknowledgements.blank?
        &mdash;
      - else
        %ul
          - for item in @study.other_acknowledgements
            %li
              = "#{cleanup item["name"], "n.a."},"
              = cleanup item["affiliation"], "n.a."
              = "(#{cleanup item["role"], "n.a."})"
    %li
      %dfn References:
      - if @study.references.blank?
        &mdash;
      - else
        %ul
          - for item in @study.references
            %li
              %p= h item['citation']
              - unless item['link'].blank?
                %p= link_to h(item['link']), h(item['link'])
              = format_text item['description']
%hr
%p.links>
  = link_to "Show DDI", study_path(@study, :format => :xml)
  - if @study.can_be_edited_by current_user
    |
    = link_to "Edit", edit_study_path(@study)
    |
    = link_to "Delete", @study, :confirm => 'Really delete this study?', |
                                :method => :delete |
