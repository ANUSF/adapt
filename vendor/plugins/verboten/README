Verboten
========

(Version 0.0.1, 2009-11-18)

Verboten is a lightweight authorization plugin for Rails working on
the principle that everything is forbidden unless it is explicitly
permitted.

To enable the plugin for a given controller, include the command
'forbid_everything'. This defines two instance methods, 'permit' and
'before_authorization_filter'. The former is used to permit actions
selectively. The latter makes sure certain before filters run before
authorization is tested, so that they can set the required instance
variables (see example).


Example
=======

-------------------------------------------------------------------------------

class ApplicationController < ActionController::Base
  forbid_everything # -- forbid everything everywhere

  def current_user
    # ... (however you do authentication) ...
  end
end

-------------------------------------------------------------------------------

class PostsController < ApplicationController
  # -- find_post() sets @post, which is_author() reads
  before_authorization_filter :find_post, :except => [:index, :new, :create]

  permit :index, :show
  permit :new,  :create,           :if => :logged_in
  permit :edit, :update, :destroy, :if => :is_author,
                                   :message => "Must be the author."

  # ... (actions go here) ...

  private

  def find_post
    @post = Post.find_by_id(params[:id])
  end
  
  def is_author
    @post && @post.user == current_user
  end

  # the logged_in() method is predefined (depends on current_user())
end

-------------------------------------------------------------------------------

Copyright (c) 2009 ANU
